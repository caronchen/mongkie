/*
 * This file is part of MONGKIE. Visit <http://www.mongkie.org/> for details.
 * Visit <http://www.mongkie.org> for details about MONGKIE.
 * Copyright (C) 2013 Korean Bioinformation Center (KOBIC)
 *
 * MONGKIE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * MONGKIE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.mongkie.ui.datatable.graph.actions;

import javax.swing.JPanel;
import org.mongkie.datatable.spi.DataAction;
import org.mongkie.ui.datatable.graph.AbstractDataTable;

/**
 *
 * @author Yeongjun Jang <yjjang@kribb.re.kr>
 */
public class SearchAndReplaceUI extends javax.swing.JPanel implements DataAction.UI<AbstractDataTable, SearchAndReplace> {

    /**
     * Creates new form SearchAndReplaceUI
     */
    public SearchAndReplaceUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        columnChooseLabel = new javax.swing.JLabel();
        columnChooseComboBox = new javax.swing.JComboBox();
        searchLabel = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        replaceLabel = new javax.swing.JLabel();
        replaceTextField = new javax.swing.JTextField();
        findPreviousButton = new javax.swing.JButton();
        replaceButton = new javax.swing.JButton();
        replaceAllButton = new javax.swing.JButton();
        optionPanel = new javax.swing.JPanel();
        wholeWordsCheckBox = new javax.swing.JCheckBox();
        matchCaseCheckBox = new javax.swing.JCheckBox();
        regularExpressionCheckBox = new javax.swing.JCheckBox();
        findNextButton = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(columnChooseLabel, org.openide.util.NbBundle.getMessage(SearchAndReplaceUI.class, "SearchAndReplaceUI.columnChooseLabel.text")); // NOI18N

        columnChooseComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- All Columns" }));

        org.openide.awt.Mnemonics.setLocalizedText(searchLabel, org.openide.util.NbBundle.getMessage(SearchAndReplaceUI.class, "SearchAndReplaceUI.searchLabel.text")); // NOI18N

        searchTextField.setText(org.openide.util.NbBundle.getMessage(SearchAndReplaceUI.class, "SearchAndReplaceUI.searchTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(replaceLabel, org.openide.util.NbBundle.getMessage(SearchAndReplaceUI.class, "SearchAndReplaceUI.replaceLabel.text")); // NOI18N

        replaceTextField.setText(org.openide.util.NbBundle.getMessage(SearchAndReplaceUI.class, "SearchAndReplaceUI.replaceTextField.text")); // NOI18N

        findPreviousButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/mongkie/ui/datatable/resources/go_previous.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(findPreviousButton, org.openide.util.NbBundle.getMessage(SearchAndReplaceUI.class, "SearchAndReplaceUI.findPreviousButton.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(replaceButton, org.openide.util.NbBundle.getMessage(SearchAndReplaceUI.class, "SearchAndReplaceUI.replaceButton.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(replaceAllButton, org.openide.util.NbBundle.getMessage(SearchAndReplaceUI.class, "SearchAndReplaceUI.replaceAllButton.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(wholeWordsCheckBox, org.openide.util.NbBundle.getMessage(SearchAndReplaceUI.class, "SearchAndReplaceUI.wholeWordsCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(matchCaseCheckBox, org.openide.util.NbBundle.getMessage(SearchAndReplaceUI.class, "SearchAndReplaceUI.matchCaseCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(regularExpressionCheckBox, org.openide.util.NbBundle.getMessage(SearchAndReplaceUI.class, "SearchAndReplaceUI.regularExpressionCheckBox.text")); // NOI18N

        javax.swing.GroupLayout optionPanelLayout = new javax.swing.GroupLayout(optionPanel);
        optionPanel.setLayout(optionPanelLayout);
        optionPanelLayout.setHorizontalGroup(
            optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionPanelLayout.createSequentialGroup()
                .addGroup(optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(wholeWordsCheckBox)
                    .addComponent(matchCaseCheckBox)
                    .addComponent(regularExpressionCheckBox))
                .addGap(0, 37, Short.MAX_VALUE))
        );
        optionPanelLayout.setVerticalGroup(
            optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionPanelLayout.createSequentialGroup()
                .addComponent(wholeWordsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(matchCaseCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(regularExpressionCheckBox))
        );

        findNextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/mongkie/ui/datatable/resources/go_next.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(findNextButton, org.openide.util.NbBundle.getMessage(SearchAndReplaceUI.class, "SearchAndReplaceUI.findNextButton.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(searchLabel)
                                    .addComponent(replaceLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(replaceTextField)
                                    .addComponent(searchTextField)))
                            .addComponent(optionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(findPreviousButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(findNextButton))
                            .addComponent(replaceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(replaceAllButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(columnChooseLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(columnChooseComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(columnChooseLabel)
                    .addComponent(columnChooseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchLabel)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findPreviousButton)
                    .addComponent(findNextButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(replaceLabel)
                    .addComponent(replaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(replaceButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(replaceAllButton)
                    .addComponent(optionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox columnChooseComboBox;
    private javax.swing.JLabel columnChooseLabel;
    private javax.swing.JButton findNextButton;
    private javax.swing.JButton findPreviousButton;
    private javax.swing.JCheckBox matchCaseCheckBox;
    private javax.swing.JPanel optionPanel;
    private javax.swing.JCheckBox regularExpressionCheckBox;
    private javax.swing.JButton replaceAllButton;
    private javax.swing.JButton replaceButton;
    private javax.swing.JLabel replaceLabel;
    private javax.swing.JTextField replaceTextField;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JCheckBox wholeWordsCheckBox;
    // End of variables declaration//GEN-END:variables

    @Override
    public void load(AbstractDataTable table, SearchAndReplace action) {
        searchTextField.selectAll();
        searchTextField.requestFocusInWindow();
    }

    @Override
    public boolean close(Object option) {
        return false;
    }

    @Override
    public Object[] getDialogOptions() {
        return new Object[]{"Close"};
    }

    @Override
    public JPanel getPanel() {
        return this;
    }
}
