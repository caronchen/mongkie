/*
 * This file is part of MONGKIE. Visit <http://www.mongkie.org/> for details.
 * Copyright (C) 2011 Korean Bioinformation Center(KOBIC)
 * 
 * MONGKIE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * MONGKIE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * InformationPanel.java
 *
 * Created on Jun 30, 2011, 4:29:42 PM
 */
package org.mongkie.ui.enrichment.go;

import java.util.Arrays;
import org.mongkie.enrichment.spi.EnrichedTerm;

/**
 *
 * @author Yeongjun Jang <yjjang@kribb.re.kr>
 */
public class InformationPanel extends javax.swing.JPanel {

    /** Creates new form InformationPanel */
    public InformationPanel() {
        initComponents();
    }

    public void setTerm(EnrichedTerm term) {
        idValue.setText(term.getID());
        nameValue.setText(term.getName());
        descriptionValue.setText(term.getDescription());
        descriptionValue.setCaretPosition(0);
        String geneIds = Arrays.toString(term.getEnrichedGeneIds());
        enrichedValue.setText(geneIds.substring(1, geneIds.length() - 1));
        enrichedValue.setCaretPosition(0);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        descriptionLabel = new javax.swing.JLabel();
        descriptionScroll = new javax.swing.JScrollPane();
        descriptionValue = new javax.swing.JTextArea();
        enrichedLabel = new javax.swing.JLabel();
        enrichedScroll = new javax.swing.JScrollPane();
        enrichedValue = new javax.swing.JTextArea();
        nameValue = new javax.swing.JLabel();
        idValue = new javax.swing.JLabel();

        idLabel.setText(org.openide.util.NbBundle.getMessage(InformationPanel.class, "InformationPanel.idLabel.text")); // NOI18N

        nameLabel.setText(org.openide.util.NbBundle.getMessage(InformationPanel.class, "InformationPanel.nameLabel.text")); // NOI18N

        descriptionLabel.setText(org.openide.util.NbBundle.getMessage(InformationPanel.class, "InformationPanel.descriptionLabel.text")); // NOI18N

        descriptionValue.setColumns(20);
        descriptionValue.setEditable(false);
        descriptionValue.setLineWrap(true);
        descriptionValue.setRows(4);
        descriptionValue.setWrapStyleWord(true);
        descriptionScroll.setViewportView(descriptionValue);

        enrichedLabel.setText(org.openide.util.NbBundle.getMessage(InformationPanel.class, "InformationPanel.enrichedLabel.text")); // NOI18N

        enrichedValue.setColumns(20);
        enrichedValue.setEditable(false);
        enrichedValue.setLineWrap(true);
        enrichedValue.setRows(4);
        enrichedValue.setWrapStyleWord(true);
        enrichedScroll.setViewportView(enrichedValue);

        nameValue.setFont(nameValue.getFont().deriveFont(nameValue.getFont().getStyle() | java.awt.Font.BOLD));
        nameValue.setForeground(java.awt.Color.blue);
        nameValue.setText(org.openide.util.NbBundle.getMessage(InformationPanel.class, "InformationPanel.nameValue.text")); // NOI18N

        idValue.setFont(idValue.getFont().deriveFont(idValue.getFont().getStyle() | java.awt.Font.BOLD));
        idValue.setText(org.openide.util.NbBundle.getMessage(InformationPanel.class, "InformationPanel.idValue.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionLabel)
                    .addComponent(descriptionScroll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addComponent(enrichedLabel)
                    .addComponent(enrichedScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel)
                            .addComponent(idLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idValue)
                            .addComponent(nameValue))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(descriptionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descriptionScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(enrichedLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enrichedScroll)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JScrollPane descriptionScroll;
    private javax.swing.JTextArea descriptionValue;
    private javax.swing.JLabel enrichedLabel;
    private javax.swing.JScrollPane enrichedScroll;
    private javax.swing.JTextArea enrichedValue;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel idValue;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel nameValue;
    // End of variables declaration//GEN-END:variables
}
