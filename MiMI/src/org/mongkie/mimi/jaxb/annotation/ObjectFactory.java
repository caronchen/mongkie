//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.10.30 at 10:00:46 PM KST 
//


package org.mongkie.mimi.jaxb.annotation;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.mongkie.mimi.jaxb.annotation package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _GeneSymbol_QNAME = new QName("", "GeneSymbol");
    private final static QName _GeneType_QNAME = new QName("", "GeneType");
    private final static QName _GeneDescription_QNAME = new QName("", "GeneDescription");
    private final static QName _TaxonomyID_QNAME = new QName("", "TaxonomyID");
    private final static QName _GeneID_QNAME = new QName("", "GeneID");
    private final static QName _Organism_QNAME = new QName("", "Organism");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.mongkie.mimi.jaxb.annotation
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ResultSet }
     * 
     */
    public ResultSet createResultSet() {
        return new ResultSet();
    }

    /**
     * Create an instance of {@link Annotation }
     * 
     */
    public Annotation createAnnotation() {
        return new Annotation();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "GeneSymbol")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createGeneSymbol(String value) {
        return new JAXBElement<String>(_GeneSymbol_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "GeneType")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createGeneType(String value) {
        return new JAXBElement<String>(_GeneType_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "GeneDescription")
    public JAXBElement<String> createGeneDescription(String value) {
        return new JAXBElement<String>(_GeneDescription_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TaxonomyID")
    public JAXBElement<Integer> createTaxonomyID(Integer value) {
        return new JAXBElement<Integer>(_TaxonomyID_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "GeneID")
    public JAXBElement<Integer> createGeneID(Integer value) {
        return new JAXBElement<Integer>(_GeneID_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Organism")
    public JAXBElement<String> createOrganism(String value) {
        return new JAXBElement<String>(_Organism_QNAME, String.class, null, value);
    }

}
