/*
 * This file is part of MONGKIE. Visit <http://www.mongkie.org/> for details.
 * Copyright (C) 2011 Korean Bioinformation Center(KOBIC)
 * 
 * MONGKIE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * MONGKIE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.mongkie.ui.visualmap;

import static org.mongkie.visualization.Config.MODE_ACTION;
import static org.mongkie.visualization.Config.ROLE_NETWORK;
import org.mongkie.visualmap.spi.VisualMapTopPaneUI;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//org.mongkie.ui.visualmap//VisualMap//EN",
autostore = false)
@TopComponent.Description(preferredID = "VisualMapTopComponent",
iconBase = "org/mongkie/ui/visualmap/resources/visual_map.png",
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = MODE_ACTION, openAtStartup = true, roles = ROLE_NETWORK, position = 200)
@ActionID(category = "Window", id = "org.mongkie.ui.visualmap.VisualMapTopComponent")
@ActionReference(path = "Menu/Window", position = 20)
@TopComponent.OpenActionRegistration(displayName = "#CTL_VisualMapAction",
preferredID = "VisualMapTopComponent")
public final class VisualMapTopComponent extends TopComponent {

    public VisualMapTopComponent() {
        initComponents();
        setName(NbBundle.getMessage(VisualMapTopComponent.class, "CTL_VisualMapTopComponent"));
        setToolTipText(NbBundle.getMessage(VisualMapTopComponent.class, "HINT_VisualMapTopComponent"));

        for (final VisualMapTopPaneUI topPaneUI : Lookup.getDefault().lookupAll(VisualMapTopPaneUI.class)) {
            tabbedTopPanes.addTab(topPaneUI.getDisplayName(), null, topPaneUI.getPanel(), topPaneUI.getShortDescription());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedTopPanes = new javax.swing.JTabbedPane();

        setLayout(new java.awt.BorderLayout());

        tabbedTopPanes.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tabbedTopPanes.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        add(tabbedTopPanes, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane tabbedTopPanes;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
